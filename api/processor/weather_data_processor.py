import logging
import sys

from api.db.db_adaptor import DBAdaptor

DATA_PROCESSOR_STMT = '''
REPLACE INTO WEATHER_STATS 
SELECT WEATHER_DATE, LAT, LON, DAILY_AVG_TEMP , DAILY_MIN_TEMP , DAILY_MAX_TEMP , MONTHLY_MAX_TEMP FROM (
	WITH WEATHER_DATA AS (
		SELECT LAT, LON, DATE_FORMAT(WEATHER_DATE,'%Y-%m-%d') AS WEATHER_DATE, TEMP FROM HOURLY_WEATHER HW 
	)
	
	SELECT AVGTEMP.LAT, AVGTEMP.LON, AVGTEMP.WEATHER_DATE, AVGTEMP.DAILY_AVG_TEMP, 
	MINTEMP.DAILY_MIN_TEMP,
	MAXTEMP.DAILY_MAX_TEMP,
	MONTHLY_MAX.MONTHLY_MAX_TEMP
	FROM 
	(SELECT LAT, LON, WEATHER_DATE ,MIN(TEMP) AS DAILY_MIN_TEMP FROM WEATHER_DATA GROUP BY LAT, LON, WEATHER_DATE) MINTEMP
	JOIN 
	(SELECT LAT, LON, WEATHER_DATE ,AVG(TEMP) AS DAILY_AVG_TEMP FROM WEATHER_DATA GROUP BY LAT, LON, WEATHER_DATE
	) AVGTEMP
	ON MINTEMP.LAT = AVGTEMP.LAT AND MINTEMP.LON = AVGTEMP.LON AND MINTEMP.WEATHER_DATE = AVGTEMP.WEATHER_DATE
	JOIN
	(SELECT LAT, LON, WEATHER_DATE ,MAX(TEMP) AS DAILY_MAX_TEMP FROM WEATHER_DATA GROUP BY LAT, LON, WEATHER_DATE
	) MAXTEMP
	ON MAXTEMP.LAT = AVGTEMP.LAT AND MAXTEMP.LON = AVGTEMP.LON AND MAXTEMP.WEATHER_DATE = AVGTEMP.WEATHER_DATE
	JOIN (
	SELECT LAT, LON, WEATHER_DATE, MAX(TEMP) AS MONTHLY_MAX_TEMP FROM (
	SELECT LAT, LON, DATE_FORMAT(WEATHER_DATE,'%Y-%m') AS WEATHER_DATE, TEMP FROM HOURLY_WEATHER ) HW
	GROUP BY  LAT, LON, WEATHER_DATE
	) MONTHLY_MAX
	ON MONTHLY_MAX.LAT = MAXTEMP.LAT AND MONTHLY_MAX.LON = MAXTEMP.LON AND 
	MONTHLY_MAX.WEATHER_DATE = DATE_FORMAT(MAXTEMP.WEATHER_DATE, '%Y-%m')
) WEATHER_STATS;
'''


class WeatherProcessor:

    def __init__(self, conf):
        self.__conf = conf
        self.__adaptor = DBAdaptor(conf)
        self.__log = logging.getLogger('weather_app')

    def process(self):
        if not self.__adaptor.process_weather_data(DATA_PROCESSOR_STMT):
            self.__log.error("Weather data processing is failed. For more information please check logs.")
            return False
        else:
            self.__log.info("Weather data processing completed successfully. "
                            "To see the weather stats, check WEATHER_STATS table.")
            return True
